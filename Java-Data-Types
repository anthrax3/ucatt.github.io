
		<!DOCTYPE html>
		<html>
		<meta name="theme-color" content="#111">
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
		<link rel="stylesheet" href="src/css/stat.css">
		<title>ucatt</title>
		<link rel="stylesheet" href="style.css">
		<body>
			<div class="main">
				<h1>Java Data Types</h1>Variables are nothing but reserved memory locations to store values. This means that when you create a variable you reserve some space in the memory.<br />
<br />
Based on the data type of a variable, the operating system allocates memory and decides what can be stored in the reserved memory. Therefore, by assigning different data types to variables, you can store integers, decimals, or characters in these variables.<br />
There are two data types available in Java −<br />
<div class="pad">Primitive Data Types<br />
Reference/Object Data Types</div><br />
<h2>Primitive Data Types</h2>There are eight primitive datatypes supported by Java. Primitive datatypes are predefined by the language and named by a keyword. Let us now look into the eight primitive data types in detail.<br />
<b>byte</b><br />
<div class="pad">Byte data type is an 8-bit signed two's complement integer<br />
    Minimum value is -128 (-2^7)<br />
    Maximum value is 127 (inclusive)(2^7 -1)<br />
    Default value is 0<br />
    Byte data type is used to save space in large arrays, mainly in place of integers, since a byte is four times smaller than an integer.<br />
    Example: byte a = 100, byte b = -50</div><br />
<b>short</b><br />
<div class="pad">Short data type is a 16-bit signed two's complement integer<br />
    Minimum value is -32,768 (-2^15)<br />
    Maximum value is 32,767 (inclusive) (2^15 -1)<br />
    Short data type can also be used to save memory as byte data type. A short is 2 times smaller than an integer<br />
    Default value is 0.<br />
    Example: short s = 10000, short r = -20000</div><br />
<b>int</b><div class="pad">Int data type is a 32-bit signed two's complement integer.<br />
    Minimum value is - 2,147,483,648 (-2^31)<br />
    Maximum value is 2,147,483,647(inclusive) (2^31 -1)<br />
    Integer is generally used as the default data type for integral values unless there is a concern about memory.<br />
    The default value is 0<br />
    Example: int a = 100000, int b = -200000</div><br />
<b>long</b><br />
<div class="pad">Long data type is a 64-bit signed two's complement integer<br />
    Minimum value is -9,223,372,036,854,775,808(-2^63)<br />
    Maximum value is 9,223,372,036,854,775,807 (inclusive)(2^63 -1)<br />
    This type is used when a wider range than int is needed<br />
    Default value is 0L<br />
    Example: long a = 100000L, long b = -200000L</div><br />
<b>float</b><br />
<div class="pad">Float data type is a single-precision 32-bit IEEE 754 floating point<br />
    Float is mainly used to save memory in large arrays of floating point numbers<br />
    Default value is 0.0f<br />
    Float data type is never used for precise values such as currency<br />
    Example: float f1 = 234.5f</div><br />
<b>double</b><br />
<div class="pad">double data type is a double-precision 64-bit IEEE 754 floating point<br />
    This data type is generally used as the default data type for decimal values, generally the default choice<br />
    Double data type should never be used for precise values such as currency<br />
    Default value is 0.0d<br />
    Example: double d1 = 123.4</div><br />
<b>boolean</b><div class="pad">boolean data type represents one bit of information<br />
    There are only two possible values: true and false<br />
    This data type is used for simple flags that track true/false conditions<br />
    Default value is false<br />
    Example: boolean one = true</div><br />
<b>char</b><div class="pad">char data type is a single 16-bit Unicode character<br />
    Minimum value is '\u0000' (or 0)<br />
    Maximum value is '\uffff' (or 65,535 inclusive)<br />
    Char data type is used to store any character<br />
    Example: char letterA = 'A'</div><br />
<h2>Reference Datatypes</h2>Reference variables are created using defined constructors of the classes. They are used to access objects. These variables are declared to be of a specific type that cannot be changed. For example, Employee, Puppy, etc.<br />
    Class objects and various type of array variables come under reference datatype.<br />
    Default value of any reference variable is null.<br />
    A reference variable can be used to refer any object of the declared type or any compatible type.<br />
    Example: Animal animal = new Animal("giraffe");<br />
<h2>Java Literals</h2>A literal is a source code representation of a fixed value. They are represented directly in the code without any computation.<br />
Literals can be assigned to any primitive type variable. For example −<br />
<pre><br />
byte a = 68;<br />
char a = 'A'<br />
</pre>byte, int, long, and short can be expressed in decimal(base 10), hexadecimal(base 16) or octal(base 8) number systems as well.<br />
Prefix 0 is used to indicate octal, and prefix 0x indicates hexadecimal when using these number systems for literals. For example −<br />
<pre><br />
int decimal = 100;<br />
int octal = 0144;<br />
int hexa =  0x64;</pre><br />

			</div>
		</body>
		</html>